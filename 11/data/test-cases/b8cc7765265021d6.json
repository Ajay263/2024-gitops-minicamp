{"uid":"b8cc7765265021d6","name":"test_handling_non_numeric_values","fullName":"test_order_fulfillment#test_handling_non_numeric_values","historyId":"e87b1dcec9efe0188503e2c495d51457","time":{"start":1741761827163,"stop":1741761827181,"duration":18},"description":"Test how the pipeline handles non-numeric values like '1.0 units' in numeric columns.","descriptionHtml":"<p>Test how the pipeline handles non-numeric values like '1.0 units' in numeric columns.</p>\n","status":"broken","statusMessage":"ModuleNotFoundError: No module named 'order_fulfillment_processor'","statusTrace":"spark = <pyspark.sql.session.SparkSession object at 0x7f122dfe2eb0>\n\n    def test_handling_non_numeric_values(spark):\n        \"\"\"Test how the pipeline handles non-numeric values like '1.0 units' in numeric columns.\"\"\"\n        # Setup\n        data = [\n            (\"FMR32103602\", \"1.0 units\", 0.0, 0.0),  # String in a numeric column\n        ]\n        schema = StructType(\n            [\n                StructField(\"ORDER_ID\", StringType(), True),\n                StructField(\"on.time\", StringType(), True),  # String type for \"1.0 units\"\n                StructField(\"in_full\", FloatType(), True),\n                StructField(\"OTIF\", FloatType(), True),\n            ]\n        )\n        df = spark.createDataFrame(data, schema)\n    \n        # For this test, we'll need to create a custom mock for the load function\n        # that converts the string column to the correct type\n>       with patch(\"order_fulfillment_processor.load_order_fulfillment_data\") as mock_load:\n\ntest_order_fulfillment.py:361: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/unittest/mock.py:1388: in __enter__\n    self.target = self.getter()\n/opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/unittest/mock.py:1563: in <lambda>\n    getter = lambda: _importer(target)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ntarget = 'order_fulfillment_processor'\n\n    def _importer(target):\n        components = target.split('.')\n        import_path = components.pop(0)\n>       thing = __import__(import_path)\nE       ModuleNotFoundError: No module named 'order_fulfillment_processor'\n\n/opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/unittest/mock.py:1235: ModuleNotFoundError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"spark","time":{"start":1741761816980,"stop":1741761819509,"duration":2529},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"suite","value":"test_order_fulfillment"},{"name":"host","value":"fv-az791-129"},{"name":"thread","value":"2992-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_order_fulfillment"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"b8cc7765265021d6.json","parameterValues":[]}