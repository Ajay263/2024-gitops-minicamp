name: Airflow CI Workflow

permissions:
  contents: write
  pages: write
  id-token: write

on:
  push:
    branches:
      - main
    paths:
      - 'airflow/dag/**'
      - 'airflow/test/**'
      - 'airflow/Dockerfile'
      - 'airflow/requirements.txt'
      - 'airflow/requirements_dbt_venv.txt'
  pull_request:
    paths:
      - 'airflow/dag/**'
      - 'airflow/test/**'
      - 'airflow/Dockerfile'
      - 'airflow/requirements.txt'
      - 'airflow/requirements_dbt_venv.txt'
  workflow_dispatch:

env:
  TEST_EXECUTION_ENV: prod

jobs:
  test:
    name: 'Run Airflow Tests'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Airflow Test Image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: airflow-test:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Install and run pre-commit hooks
        run: |
            pre-commit install
            SKIP=sqlfluff-lint,sqlfluff-fix,yamllint,no-commit-to-branch pre-commit run --all-files --verbose
  
      
      - name: Install Test Dependencies in Docker
        run: |
          docker run --rm -v ${{ github.workspace }}:/app -w /app airflow-test:latest pip install pytest pytest-cov allure-pytest pytest-rerunfailures
      
      - name: Run Airflow Tests in Docker
        id: run_tests
        continue-on-error: true
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/app \
            -w /app \
            -e PYTHONPATH=/app/airflow/dag \
            airflow-test:latest \
            bash -c "cd airflow/test && pytest -xvs --continue-on-collection-errors --reruns 3 --cov=../dag --cov-report=xml:coverage.xml --cov-report=html:coverage_html --alluredir=allure-results"
      
      - name: Get Allure history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages
      
      - name: Upload Coverage Report (HTML)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage_html
          path: airflow/test/coverage_html
      
      - name: Upload Allure Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-results
          path: airflow/test/allure-results
      
      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: airflow/test/allure-results
          allure_history: allure-history
      
      - name: Upload Allure Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-report
          path: allure-report
      
      - name: Deploy to GitHub Pages
        if: always() && github.event_name != 'pull_request'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: allure-history
          keep_files: false
      
      - name: Add Coverage Comment to PR
        if: github.event_name == 'pull_request' && always()
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-xml-coverage-path: airflow/test/coverage.xml
          title: Airflow Test Coverage Report
          create-new-comment: true
          report-only-changed-files: true
      
      - name: Check test exit code
        if: always()
        id: check_status
        run: |
          if [ "${{ steps.run_tests.outcome }}" == "failure" ]; then
            echo "tests_failed=true" >> $GITHUB_OUTPUT
          else
            echo "tests_failed=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Fail if tests failed
        if: steps.check_status.outputs.tests_failed == 'true'
        run: |
          echo "Tests failed. Marking workflow as failed."
          exit 1