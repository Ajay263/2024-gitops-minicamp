name: DBT CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  dbt_ci_cd:
    runs-on: ubuntu-latest
    env:
      DBT_PROFILES_DIR: .
      REDSHIFT_HOST: ${{ secrets.REDSHIFT_HOST }}
      REDSHIFT_USER: ${{ secrets.REDSHIFT_USER }}
      REDSHIFT_PASSWORD: ${{ secrets.REDSHIFT_PASSWORD }}
      REDSHIFT_PORT: ${{ secrets.REDSHIFT_PORT }}
      REDSHIFT_DBNAME: ${{ secrets.REDSHIFT_DBNAME }}
      REDSHIFT_SCHEMA: ${{ secrets.REDSHIFT_SCHEMA }}
      S3_BUCKET_PATH: ${{ secrets.S3_BUCKET_PATH }}
    
    permissions:
      id-token: write # Required for OIDC authentication
      contents: read # Required to checkout the repository
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for proper state comparison
      
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'
      
      - name: Install dependencies
        run: |
          pip install -r airflow/requirements_dbt_venv.txt
          pip install awscli psycopg2-binary
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: us-east-1
      
      - name: Create profiles.yml
        run: |
          cat > profiles.yml <<EOF
          nexabrands_dbt:
            outputs:
              prod:
                type: redshift
                host: ${{ env.REDSHIFT_HOST }}
                user: ${{ env.REDSHIFT_USER }}
                password: ${{ env.REDSHIFT_PASSWORD }}
                port: ${{ env.REDSHIFT_PORT }}
                dbname: ${{ env.REDSHIFT_DBNAME }}
                schema: ${{ env.REDSHIFT_SCHEMA }}
                threads: 4
                keepalives_idle: 0
                connect_timeout: 60
            target: prod
          EOF
      
      - name: Verify Redshift Connection
        run: |
          python -c "
          import psycopg2
          conn = psycopg2.connect(
              host='${{ env.REDSHIFT_HOST }}',
              port=${{ env.REDSHIFT_PORT }},
              dbname='${{ env.REDSHIFT_DBNAME }}',
              user='${{ env.REDSHIFT_USER }}',
              password='${{ env.REDSHIFT_PASSWORD }}'
          )
          cur = conn.cursor()
          cur.execute('SELECT current_user, current_database()')
          print(cur.fetchone())
          conn.close()
          "
      
      - name: Download previous manifest
        run: |
          aws s3 cp s3://${{ env.S3_BUCKET_PATH }}/dbt-docs/manifest.json ./manifest.json || echo "No previous manifest found"
      
      - name: Run dbt debug
        run: dbt debug --target prod
      
      - name: Run dbt deps
        run: dbt deps --target prod
      
      - name: Run dbt test (PR only)
        if: github.event_name == 'pull_request'
        run: |
          if [ -f "./manifest.json" ]; then
            dbt test -s 'state:modified+' --state ./ --target prod
          else
            dbt test --target prod
          fi
      
      - name: Run dbt build (main branch only)
        if: github.ref == 'refs/heads/main'
        run: |
          if [ -f "./manifest.json" ]; then
            dbt build -s 'state:modified+' --state ./ --target prod
          else
            dbt build --target prod
          fi
      
      - name: Copy new manifest to S3 (main branch only)
        if: github.ref == 'refs/heads/main'
        run: |
          aws s3 cp ./target/manifest.json s3://${{ env.S3_BUCKET_PATH }}dbt-docs/