name: dbt_CD_action

on:
  push:
    branches:
      - main

jobs:
  CD_job:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    env:
      S3_BUCKET_MANIFEST: ${{ secrets.S3_BUCKET_MANIFEST }}
      S3_PATH_MANIFEST: ${{ secrets.S3_PATH_MANIFEST }}
      DBT_ENV_SECRET_REDSHIFT_HOST: ${{ secrets.DBT_ENV_SECRET_REDSHIFT_HOST }}
      DBT_ENV_SECRET_REDSHIFT_DATABASE: ${{ secrets.DBT_ENV_SECRET_REDSHIFT_DATABASE }}
      DBT_ENV_SECRET_REDSHIFT_USER: ${{ secrets.DBT_ENV_SECRET_REDSHIFT_USER }}
      DBT_ENV_SECRET_REDSHIFT_PASSWORD: ${{ secrets.DBT_ENV_SECRET_REDSHIFT_PASSWORD }}
      DBT_ENV_SECRET_REDSHIFT_PORT: ${{ secrets.DBT_ENV_SECRET_REDSHIFT_PORT }}
      DBT_ENV_SECRET_REDSHIFT_SCHEMA: ${{ secrets.DBT_ENV_SECRET_REDSHIFT_SCHEMA }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: pip install -r requirements_dbt_venv.txt

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
        aws-region: us-east-1

    - name: Copy manifest.json from S3
      run: |
        aws s3 cp s3://${{ env.S3_BUCKET_MANIFEST }}/${{ env.S3_PATH_MANIFEST }}/manifest.json ./ || echo "Manifest not found"

    - name: Run dbt debug
      run: dbt debug --target prod

    - name: Run dbt deps
      run: dbt deps --target prod

    - name: Run dbt build
      run: |
        if [ -f "./manifest.json" ]; then
          dbt build -s 'state:modified+' --state ./ --target prod
        else
          dbt build --target prod
        fi

    - name: Copy new manifest.json to S3
      run: |
        aws s3 cp ./target/manifest.json s3://${{ env.S3_BUCKET_MANIFEST }}/${{ env.S3_PATH_MANIFEST }}/