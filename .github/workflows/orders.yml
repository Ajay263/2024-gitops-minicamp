name: Process Orders Data

permissions:
  contents: write
  pages: write
  id-token: write

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/modules/scripts/orders.py'
  workflow_dispatch:

jobs:
  test:
    name: 'Run PySpark Tests'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyspark pytest pytest-cov allure-pytest pre-commit

      - name: Install and run pre-commit hooks
        run: |
          pre-commit install
          pre-commit run --all-files

      - name: Run PySpark tests
        run: |
          export PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE/terraform/modules/scripts
          cd terraform/modules/tests
          pytest test_orders.py -v --cov=../scripts --cov-report=xml:coverage.xml --cov-report=html:coverage_html --alluredir=allure-results

      - name: Upload Coverage Report (HTML)
        uses: actions/upload-artifact@v4
        with:
          name: coverage_html
          path: terraform/modules/tests/coverage_html

      - name: Upload Allure Results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: terraform/modules/tests/allure-results

      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: terraform/modules/tests/allure-results
          allure_report: allure-report

      - name: Upload Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

      - name: Deploy to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: allure-report
          keep_files: false

      - name: Add Coverage Comment to PR
        if: github.event_name == 'pull_request'
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-xml-coverage-path: terraform/modules/tests/coverage.xml
          title: PySpark Test Coverage Report
          create-new-comment: true
          report-only-changed-files: true

  deploy-glue:
    name: 'Deploy ETL Glue Job Script'
    runs-on: ubuntu-latest
    environment: production
    needs: test
    defaults:
      run:
        shell: bash

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install boto3

      - name: Upload Glue Script to S3
        run: |
          aws s3 cp terraform/modules/scripts/orders.py "s3://nexabrands-prod-code/scripts/orders.py"
        env:
          CODE_BUCKET: ${{ secrets.CODE_BUCKET }}
          ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
          SOURCE_BUCKET: ${{ secrets.SOURCE_BUCKET }}
          TARGET_BUCKET: ${{ secrets.TARGET_BUCKET }}
          GLUE_SERVICE_ROLE: ${{ secrets.GLUE_SERVICE_ROLE }}