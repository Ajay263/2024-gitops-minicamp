name: 'Terraform Plan'

on:
  push:
    branches: [ 'main' ]
  pull_request:
  workflow_call:
    secrets:
      ROLE_TO_ASSUME:
        required: true

permissions:
  contents: read
  id-token: write
  pull-requests: write

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    env:
      GH_TOKEN: ${{ github.token }}

    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
        aws-region: us-east-1

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Plan
      id: plan
      run: |
        terraform plan -out=plan.tfplan
        terraform show -json plan.tfplan > /tmp/plan.json

    - name: Setup OPA
      uses: open-policy-agent/setup-opa@v2
      with:
        version: latest

    - name: Run OPA Tests
      run: |
        if ! opa eval --format pretty --data ../policies/instance-policy.rego --input /tmp/plan.json "data.terraform.deny" > /tmp/opa_output; then
          echo "OPA evaluation failed"
          exit 1
        fi
        
        if [ -s /tmp/opa_output ]; then
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "Policy violations found:"
            cat /tmp/opa_output
            gh pr comment ${{ github.event.pull_request.number }} --body "### Policy Violations Found:\n\n$(cat /tmp/opa_output)"
            exit 1
          else
            echo "Policy violations found:"
            cat /tmp/opa_output
            exit 1
          fi
        else
          echo "No policy violations found"
        fi