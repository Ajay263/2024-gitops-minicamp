name: ETL Glue Job Deployment

on:
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  deploy-glue:
    name: 'Deploy ETL Glue Job'
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        shell: bash
    
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: us-east-1
      
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install boto3 pytest
      
      - name: Upload Glue Script to S3
        run: |
          aws s3 cp terraform/modules/scripts/script.py "s3://${CODE_BUCKET}/scripts/"
        env:
          CODE_BUCKET: ${{ secrets.CODE_BUCKET }}
      
      - name: Deploy Glue Job
        run: |
          aws glue update-job \
            --job-name "topdevs-${ENVIRONMENT}-etl-job" \
            --job-update '{
              "Role": "'"${GLUE_SERVICE_ROLE}"'",
              "Command": {
                "Name": "glueetl",
                "ScriptLocation": "s3://'${CODE_BUCKET}'/scripts/script.py",
                "PythonVersion": "3"
              },
              "GlueVersion": "4.0",
              "WorkerType": "G.1X",
              "NumberOfWorkers": 2,
              "Timeout": 2880,
              "MaxRetries": 1,
              "DefaultArguments": {
                "--enable-auto-scaling": "true",
                "--enable-continuous-cloudwatch-log": "true",
                "--enable-metrics": "true",
                "--source-path": "s3://'${SOURCE_BUCKET}'",
                "--destination-path": "s3://'${TARGET_BUCKET}'",
                "--job-name": "topdevs-'${ENVIRONMENT}'-etl-job",
                "--additional-python-modules": "pyarrow==16.0.0"
              }
            }'
        env:
          ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
          CODE_BUCKET: ${{ secrets.CODE_BUCKET }}
          SOURCE_BUCKET: ${{ secrets.SOURCE_BUCKET }}
          TARGET_BUCKET: ${{ secrets.TARGET_BUCKET }}
          GLUE_SERVICE_ROLE: ${{ secrets.GLUE_SERVICE_ROLE }}