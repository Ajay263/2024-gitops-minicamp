{"uid":"da3fc1c312098c9e","name":"test_clean_products_data_with_special_characters","fullName":"test_products#test_clean_products_data_with_special_characters","historyId":"d6e3b8dd30f93d77a01dc79fc6154c3b","time":{"start":1737695252631,"stop":1737695253082,"duration":451},"description":"Test cleaning products data with special characters.","descriptionHtml":"<p>Test cleaning products data with special characters.</p>\n","status":"broken","statusMessage":"NameError: name 'col' is not defined","statusTrace":"spark_session = <pyspark.sql.session.SparkSession object at 0x7fdfeb05aca0>\n\n    def test_clean_products_data_with_special_characters(spark_session):\n        \"\"\"Test cleaning products data with special characters.\"\"\"\n        schema = StructType(\n            [\n                StructField(\"PRODUCT_ID\", StringType(), True),\n                StructField(\"product.name\", StringType(), True),\n                StructField(\"category\", StringType(), True),\n            ]\n        )\n        data = [\n            (\"123 units\", \"Product@A\", \"Category#1\"),\n            (\"456 units\", \"Product|B\", \"Category$2\"),\n        ]\n        df = spark_session.createDataFrame(data, schema)\n    \n        # Clean data using the function\n        cleaned_df = clean_products_data(df)\n    \n        # Assertions\n        assert cleaned_df.count() == 2\n>       assert cleaned_df.filter(col(\"product_name\") == \"ProductA\").count() == 1\nE       NameError: name 'col' is not defined\n\ntest_products.py:92: NameError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"spark_session","time":{"start":1737695245005,"stop":1737695247628,"duration":2623},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"spark_session::0","time":{"start":1737695253492,"stop":1737695254437,"duration":945},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"suite","value":"test_products"},{"name":"host","value":"fv-az1369-136"},{"name":"thread","value":"2409-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_products"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"da3fc1c312098c9e.json","parameterValues":[]}