{"uid":"817b9b459ff53bb9","name":"test_clean_products_data","fullName":"test_products#test_clean_products_data","historyId":"480670bc339f1a6931ef043382bf1910","time":{"start":1737667327515,"stop":1737667328503,"duration":988},"description":"Test cleaning products data.","descriptionHtml":"<p>Test cleaning products data.</p>\n","status":"failed","statusMessage":"AssertionError: assert 0 == 1\n +  where 0 = count()\n +    where count = DataFrame[product_id: int, product_name: string, category: string].count","statusTrace":"spark_session = <pyspark.sql.session.SparkSession object at 0x7f117badaac0>\n\n    def test_clean_products_data(spark_session):\n        \"\"\"Test cleaning products data.\"\"\"\n        schema = StructType(\n            [\n                StructField(\"PRODUCT_ID\", StringType(), True),\n                StructField(\"product.name\", StringType(), True),\n                StructField(\"category\", StringType(), True),\n            ]\n        )\n        data = [\n            (\"123 units\", \"Product A\", \"Category 1\"),\n            (\"456 units\", \"N/A\", \"Unknown\"),\n            (\"789 units\", \"Product C\", \"NULL\"),\n        ]\n        df = spark_session.createDataFrame(data, schema)\n    \n        # Clean data using the function\n        cleaned_df = clean_products_data(df)\n    \n        # Assertions\n>       assert cleaned_df.count() == 1  # Only one row should remain after cleaning\nE       assert 0 == 1\nE        +  where 0 = count()\nE        +    where count = DataFrame[product_id: int, product_name: string, category: string].count\n\ntest_products.py:65: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"spark_session","time":{"start":1737667318151,"stop":1737667323477,"duration":5326},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"spark_session::0","time":{"start":1737667329356,"stop":1737667330302,"duration":946},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"suite","value":"test_products"},{"name":"host","value":"fv-az1055-299"},{"name":"thread","value":"2377-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_products"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"817b9b459ff53bb9.json","parameterValues":[]}