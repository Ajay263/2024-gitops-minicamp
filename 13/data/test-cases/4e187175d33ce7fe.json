{"uid":"4e187175d33ce7fe","name":"test_clean_order_id","fullName":"test_order_fulfillment#test_clean_order_id","historyId":"352b5a5bc2ff6da788c8dafbc1bd0bf6","time":{"start":1741762991137,"stop":1741762991139,"duration":2},"description":"Test that order_id is correctly cleaned and normalized.","descriptionHtml":"<p>Test that order_id is correctly cleaned and normalized.</p>\n","status":"broken","statusMessage":"pyspark.errors.exceptions.base.PySparkTypeError: [CANNOT_ACCEPT_OBJECT_IN_TYPE] `FloatType()` can not accept object `1.0 units` in type `str`.","statusTrace":"spark = <pyspark.sql.session.SparkSession object at 0x7f96053d2be0>\n\n    def test_clean_order_id(spark):\n        \"\"\"Test that order_id is correctly cleaned and normalized.\"\"\"\n        # Setup\n        data = [\n            (\"  FMR-321-035-03  \", 1.0, 0.0, 0.0),\n            (\"fmr@341034#03\", 1.0, -1.0, 0.0),\n            (\"FMR 321 036 02\", \"1.0 units\", 0.0, 0.0),\n        ]\n        schema = StructType(\n            [\n                StructField(\"order_id\", StringType(), True),\n                StructField(\"on_time\", FloatType(), True),\n                StructField(\"in_full\", FloatType(), True),\n                StructField(\"otif\", FloatType(), True),\n            ]\n        )\n>       df = spark.createDataFrame(data, schema)\n\ntest_order_fulfillment.py:175: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/pyspark/sql/session.py:1443: in createDataFrame\n    return self._create_dataframe(\n/opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/pyspark/sql/session.py:1485: in _create_dataframe\n    rdd, struct = self._createFromLocal(map(prepare, data), schema)\n/opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/pyspark/sql/session.py:1090: in _createFromLocal\n    data = list(data)\n/opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/pyspark/sql/session.py:1459: in prepare\n    verify_func(obj)\n/opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/pyspark/sql/types.py:2201: in verify\n    verify_value(obj)\n/opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/pyspark/sql/types.py:2174: in verify_struct\n    verifier(v)\n/opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/pyspark/sql/types.py:2201: in verify\n    verify_value(obj)\n/opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/pyspark/sql/types.py:2195: in verify_default\n    verify_acceptable_types(obj)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nobj = '1.0 units'\n\n    def verify_acceptable_types(obj: Any) -> None:\n        # subclass of them can not be fromInternal in JVM\n        if type(obj) not in _acceptable_types[_type]:\n>           raise PySparkTypeError(\n                error_class=\"CANNOT_ACCEPT_OBJECT_IN_TYPE\",\n                message_parameters={\n                    \"data_type\": str(dataType),\n                    \"obj_name\": str(obj),\n                    \"obj_type\": type(obj).__name__,\n                },\n            )\nE           pyspark.errors.exceptions.base.PySparkTypeError: [CANNOT_ACCEPT_OBJECT_IN_TYPE] `FloatType()` can not accept object `1.0 units` in type `str`.\n\n/opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/pyspark/sql/types.py:2020: PySparkTypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"spark","time":{"start":1741762983575,"stop":1741762986242,"duration":2667},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"suite","value":"test_order_fulfillment"},{"name":"host","value":"fv-az1922-927"},{"name":"thread","value":"2995-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_order_fulfillment"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"4e187175d33ce7fe.json","parameterValues":[]}