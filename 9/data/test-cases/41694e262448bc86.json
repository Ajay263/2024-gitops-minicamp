{"uid":"41694e262448bc86","name":"test_dag_count","fullName":"test_dags_general.TestDagsGeneral#test_dag_count","historyId":"868d9a343406d64a72f8f30bddb571cb","time":{"start":1744702301003,"stop":1744702301003,"duration":0},"description":"\n        Test that we have the expected number of DAGs.\n        \n        This test helps detect when DAGs are accidentally removed or added\n        without updating the expected count.\n        ","descriptionHtml":"<pre><code>    Test that we have the expected number of DAGs.\n    \n    This test helps detect when DAGs are accidentally removed or added\n    without updating the expected count.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Expected 3 DAGs, got 0\nassert 0 == 3\n +  where 0 = len({})\n +    where {} = <airflow.models.dagbag.DagBag object at 0x7fdcd0dd5c10>.dags","statusTrace":"self = <test_dags_general.TestDagsGeneral object at 0x7fdcd0dc08b0>\ndagbag = <airflow.models.dagbag.DagBag object at 0x7fdcd0dd5c10>\n\n    def test_dag_count(self, dagbag):\n        \"\"\"\n        Test that we have the expected number of DAGs.\n    \n        This test helps detect when DAGs are accidentally removed or added\n        without updating the expected count.\n        \"\"\"\n        # Replace the expected count with the actual number of your DAGs\n        expected_dag_count = 3  # Adjust based on your project\n>       assert len(dagbag.dags) == expected_dag_count, f\"Expected {expected_dag_count} DAGs, got {len(dagbag.dags)}\"\nE       AssertionError: Expected 3 DAGs, got 0\nE       assert 0 == 3\nE        +  where 0 = len({})\nE        +    where {} = <airflow.models.dagbag.DagBag object at 0x7fdcd0dd5c10>.dags\n\ntest_dags_general.py:99: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"dagbag","time":{"start":1744702301002,"stop":1744702301002,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n        Test that we have the expected number of DAGs.\n        \n        This test helps detect when DAGs are accidentally removed or added\n        without updating the expected count.\n        ","status":"failed","statusMessage":"AssertionError: Expected 3 DAGs, got 0\nassert 0 == 3\n +  where 0 = len({})\n +    where {} = <airflow.models.dagbag.DagBag object at 0x7fdcd0dd5c10>.dags","statusTrace":"self = <test_dags_general.TestDagsGeneral object at 0x7fdcd0dc08b0>\ndagbag = <airflow.models.dagbag.DagBag object at 0x7fdcd0dd5c10>\n\n    def test_dag_count(self, dagbag):\n        \"\"\"\n        Test that we have the expected number of DAGs.\n    \n        This test helps detect when DAGs are accidentally removed or added\n        without updating the expected count.\n        \"\"\"\n        # Replace the expected count with the actual number of your DAGs\n        expected_dag_count = 3  # Adjust based on your project\n>       assert len(dagbag.dags) == expected_dag_count, f\"Expected {expected_dag_count} DAGs, got {len(dagbag.dags)}\"\nE       AssertionError: Expected 3 DAGs, got 0\nE       assert 0 == 3\nE        +  where 0 = len({})\nE        +    where {} = <airflow.models.dagbag.DagBag object at 0x7fdcd0dd5c10>.dags\n\ntest_dags_general.py:99: AssertionError","steps":[],"attachments":[{"uid":"5ce044165fc62c8a","name":"log","source":"5ce044165fc62c8a.txt","type":"text/plain","size":209}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"suite","value":"test_dags_general"},{"name":"subSuite","value":"TestDagsGeneral"},{"name":"host","value":"fv-az1277-646"},{"name":"thread","value":"3808-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_dags_general"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"41694e262448bc86.json","parameterValues":[]}